(coq.pp (modules g_ltac1_record g_ltac1_tactics))
(library
 (name tactician_ltac1_record_plugin)
 (public_name coq-tactician.record-plugin)
 (flags :standard -rectypes -w -27 -warn-error -A)
 (modules (
   "g_ltac1_record"
   ltacrecord
   inline_private_constants
   diagonal_iterative_search
   offline_evaluation_simulator_learner
   decomposition_learner
   naiveknn_learner
   naiveknn_subst_learner
   trivial_learners
   lshf_learner
   forest_data_generator
   knn
   find_tactic_syntax
   tactic_substitute
   tactic_substitute2
   tactic_abstract
   search_strategy
   search_strategy_internal
   learner_helper
   features
   tactic_learner
   tactic_learner_internal
   tactic_normalize
   tactic_annotate
   known_witnesses
   cook_tacexpr
   gendischarge
   mapping_helpers
   map_all_the_witnesses
   map_all_the_things
   sexpr
   tactic_sexpr
   timeouttac
   tactician_util
   tactic_one_variable
   tacexpr_functor
   tacexpr_convert
   glob_term_functor
   glob_term_convert
   constrexpr_functor
   constrexpr_convert
   pattern_functor
   pattern_convert
   coq_ast_monadic_map
   coq_ast_cata
   coq_ast_sequence
   coq_ast_map_elements
   extreme_tactic_normalize
   tactic_name_remove
   proof_equality
   benchmark
   monad_util
 ))
 (libraries
   coq.plugins.ltac
   coq.plugins.ssrmatching
   coq.plugins.ssreflect
   coq.plugins.firstorder
   coq.plugins.funind
   sexplib
 )
 (preprocess (staged_pps ppx_import ppx_sexp_conv ppx_deriving_yojson))
)
(library
 (name tactician_ssreflect_plugin)
 (public_name coq-tactician.ssreflect-plugin)
 (flags :standard -rectypes -w -27 -warn-error -A)
 (modules (
   "known_ssr_witnesses"
   map_ssr_witnesses
   ssr_ast_cata
 ))
 (libraries
   coq.plugins.ltac
   coq.plugins.ssrmatching
   coq.plugins.ssreflect
   coq-tactician.record-plugin
 )
)
(library
 (name tactician_ltac1_tactics_plugin)
 (public_name coq-tactician.tactics-plugin)
 (flags :standard -rectypes -w -27 -warn-error -A)
 (modules ("g_ltac1_tactics"))
 (libraries
   coq-tactician.record-plugin
 )
)
